# Example of an XML RPC Server.
from xmlrpc.server import SimpleXMLRPCServer

# Define functions to expose
def add(x, y):
    return x + y

def subtract(x, y):
    return x - y

def multiply(x, y): # Vulnerability here that would have been exposed, python doesn't do bound checking
                    # You can pass in y as a incredibly large exponent and it would take a long time to run
                    # aka resouce hogging/ultimately distrupting the server.
                    # Now imageine if  Y= `(10**100**1000**10000**100000)`. 
                    # Large caluclation should always be threaded with timeouts.
    return x * y

# Set up the server
def main():
    server = SimpleXMLRPCServer(("localhost", 8000))
    print("RPC Server is running on port 8000...")
    
    # Register functions
    server.register_function(add, "add")
    server.register_function(subtract, "subtract")
    server.register_function(multiply, "multiply")
    
    # Run the server
    server.serve_forever()

if __name__ == "__main__":
    main()
